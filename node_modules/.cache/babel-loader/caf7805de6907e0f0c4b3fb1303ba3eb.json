{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antoni\\\\Desktop\\\\pathfinder\\\\src\\\\components\\\\Pathfind.js\",\n    _s = $RefreshSig$();\n\nimport { selectOptions } from \"@testing-library/user-event/dist/select-options\";\nimport React, { useState, useEffect } from \"react\";\nimport Node from \"./Node\";\nimport \"./Pathfind.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cols = 25;\nconst rows = 10;\nconst NODE_START_ROW = 0;\nconst NODE_START_COL = 0;\nconst NODE_END_ROW = rows - 1;\nconst NODE_END_COL = cols - 1;\n\nconst Pathfind = () => {\n  _s();\n\n  const [Grid, setGrid] = useState([]);\n  useEffect(() => {\n    initializeGrid();\n  }, []);\n\n  const initializeGrid = () => {\n    const grid = new Array(rows);\n\n    for (let i = 0; i < rows; i++) {\n      grid[i] = new Array(cols);\n    }\n\n    createSpot(grid);\n    setGrid(grid);\n  };\n\n  const createSpot = grid => {\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        grid[i][j] = new Spot(i, j);\n      }\n    }\n  };\n\n  const gridwithNode = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Grid.map((row, rowIndex) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowWrapper\",\n        children: row.map((col, colIndex) => {\n          const {\n            isStart,\n            isEnd\n          } = col;\n          return /*#__PURE__*/_jsxDEV(Node, {\n            isStart: isStart,\n            isEnd: isEnd,\n            row: rowIndex,\n            col: colIndex\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pathfind component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), gridwithNode]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pathfind, \"LLLgB117dTzJtmrdVZ6pOaCL21I=\");\n\n_c = Pathfind;\n\nfunction Spot(i, j) {\n  this.x = i;\n  this.y = j;\n  this.isStart = this.x === NODE_START_ROW && this.y === NODE_START_COL;\n  this.isEnd = this.x === NODE_END_ROW && this.y === NODE_END_COL;\n  this.g = 0;\n  this.f = 0;\n  this.h = 0;\n  this.neighbors = [];\n  this.previous;\n\n  this.addneighbors = function (grid) {\n    let i = this.x;\n    let j = this.y;\n    if (i > 0) this.addneightbors.push(grid[i - 1][j]);\n    if (i < rows - 1) this.neighbors.push(grid[i + 1][j]);\n    if (j > 0) this.neighbors.push(grid[i][j - 1]);\n    if (j < cols - 1) this.neighbors.push(grid[i][j + 1]);\n  };\n}\n\n_c2 = Spot;\nexport default Pathfind;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pathfind\");\n$RefreshReg$(_c2, \"Spot\");","map":{"version":3,"sources":["C:/Users/Antoni/Desktop/pathfinder/src/components/Pathfind.js"],"names":["selectOptions","React","useState","useEffect","Node","cols","rows","NODE_START_ROW","NODE_START_COL","NODE_END_ROW","NODE_END_COL","Pathfind","Grid","setGrid","initializeGrid","grid","Array","i","createSpot","j","Spot","gridwithNode","map","row","rowIndex","col","colIndex","isStart","isEnd","x","y","g","f","h","neighbors","previous","addneighbors","addneightbors","push"],"mappings":"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","sourcesContent":["import { selectOptions } from \"@testing-library/user-event/dist/select-options\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Node from  \"./Node\"\r\nimport \"./Pathfind.css\"\r\n\r\nconst cols = 25;\r\nconst rows = 10;\r\n\r\nconst NODE_START_ROW = 0;\r\nconst NODE_START_COL = 0;\r\nconst NODE_END_ROW = rows-1;\r\nconst NODE_END_COL = cols-1;\r\n\r\nconst Pathfind = () =>{\r\n\r\n    const [Grid, setGrid] = useState([]);\r\n\r\n    useEffect(() => {\r\n        initializeGrid();\r\n    }, []);\r\n\r\n    const initializeGrid = () =>{\r\n        const grid = new Array(rows);\r\n        for(let i = 0; i < rows; i++){\r\n            grid[i] = new Array(cols);\r\n        }\r\n        createSpot(grid);\r\n        setGrid(grid);\r\n    };\r\n\r\n    const createSpot = (grid) =>{\r\n        for(let i=0; i< rows; i++){\r\n            for(let j=0; j < cols; j++){\r\n                grid[i][j] = new Spot(i, j)\r\n            }\r\n        }\r\n    }\r\n\r\n    const gridwithNode = (\r\n        <div>\r\n            {Grid.map((row, rowIndex) => {\r\n                return (\r\n                    <div key={rowIndex} className=\"rowWrapper\">\r\n                        {row.map((col, colIndex) => {\r\n                            const {isStart, isEnd} = col;\r\n                            return(\r\n                                <Node key={colIndex} isStart={isStart} isEnd={isEnd} row={rowIndex} col={colIndex}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n    return(\r\n        <div className=\"Wrapper\">\r\n            <h1>Pathfind component</h1>\r\n            {gridwithNode}\r\n        </div>\r\n        );  \r\n};\r\n\r\nfunction Spot(i, j){\r\n    this.x = i;\r\n    this.y = j;\r\n    this.isStart = this.x === NODE_START_ROW  && this.y === NODE_START_COL;\r\n    this.isEnd = this.x === NODE_END_ROW && this.y === NODE_END_COL;\r\n    this.g = 0;\r\n    this.f = 0;\r\n    this.h = 0;\r\n    this.neighbors = [];\r\n    this.previous;\r\n    this.addneighbors = function(grid){\r\n        let i = this.x;\r\n        let j = this.y;\r\n        if(i > 0) this.addneightbors.push(grid[i-1][j])\r\n        if(i < rows - 1) this.neighbors.push(grid[i+1][j])\r\n        if(j > 0) this.neighbors.push(grid[i][j-1]);\r\n        if(j < cols - 1) this.neighbors.push(grid[i][j+1]);\r\n    };\r\n}\r\n\r\nexport default Pathfind;"]},"metadata":{},"sourceType":"module"}